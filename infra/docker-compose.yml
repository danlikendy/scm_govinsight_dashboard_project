version: '3.8'

services:
  # PostgreSQL - основное хранилище
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: scm_dashboard
      POSTGRES_USER: scm_user
      POSTGRES_PASSWORD: scm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scm_user -d scm_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO - файловое озеро для RAW данных
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis - для кэширования и очередей
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Apache Airflow - оркестрация ETL
  airflow-webserver:
    image: apache/airflow:2.7.3-python3.11
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://scm_user:scm_password@postgres:5432/scm_dashboard
      AIRFLOW__CORE__FERNET_KEY: 'your-fernet-key-here'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'your-secret-key-here'
      AIRFLOW_UID: 50000
      AIRFLOW_GID: 0
    ports:
      - "8080:8080"
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/plugins:/opt/airflow/plugins
      - ../airflow/logs:/opt/airflow/logs
      - ../etl:/opt/airflow/etl
      - ../contracts:/opt/airflow/contracts
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.7.3-python3.11
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://scm_user:scm_password@postgres:5432/scm_dashboard
      AIRFLOW__CORE__FERNET_KEY: 'your-fernet-key-here'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW_UID: 50000
      AIRFLOW_GID: 0
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/plugins:/opt/airflow/plugins
      - ../airflow/logs:/opt/airflow/logs
      - ../etl:/opt/airflow/etl
      - ../contracts:/opt/airflow/contracts
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: scheduler

  # Prometheus - мониторинг
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana - дашборды мониторинга
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  # Streamlit - дашборд
  streamlit:
    build:
      context: ..
      dockerfile: infra/Dockerfile.streamlit
    ports:
      - "8501:8501"
    environment:
      DATABASE_URL: postgresql://scm_user:scm_password@postgres:5432/scm_dashboard
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../streamlit:/app

volumes:
  postgres_data:
  minio_data:
  redis_data:
  prometheus_data:
  grafana_data:
